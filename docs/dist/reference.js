webpackJsonp([2],{414:function(e,t,o){"use strict";var n=this&&this.__decorate||function(e,t,o,n){var a,r=arguments.length,l=r<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,o):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)l=Reflect.decorate(e,t,o,n);else for(var i=e.length-1;i>=0;i--)(a=e[i])&&(l=(r<3?a(l):r>3?a(t,o,l):a(t,o))||l);return r>3&&l&&Object.defineProperty(t,o,l),l};Object.defineProperty(t,"__esModule",{value:!0});var a=o(84),r=o(1),l=o(17),i=o(29),c=o(85),s=o(121),u=o(71),m=o(415),p=o(87),f=o(65),v=function(){function e(){}return e=n([r.NgModule({imports:[l.BrowserModule,s.NoopAnimationsModule,i.FormsModule,c.HttpClientModule,u.LocalStorageModule.withConfig({prefix:"alien-ref",storageType:"localStorage"}),p.NoConflictStyleCompatibilityMode,f.ThemingModule],declarations:[m.AlienReferencePage,f.CosmicDrawerComponent,f.GameOptionsComponent,f.LevelOptionsComponent,f.AlienCardComponent,f.AlienGridComponent,f.LevelNamePipe,f.LevelStarsPipe],bootstrap:[m.AlienReferencePage],providers:[f.AlienService]})],e)}();r.enableProdMode(),a.platformBrowserDynamic().bootstrapModule(v)},415:function(e,t,o){"use strict";var n=this&&this.__decorate||function(e,t,o,n){var a,r=arguments.length,l=r<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,o):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)l=Reflect.decorate(e,t,o,n);else for(var i=e.length-1;i>=0;i--)(a=e[i])&&(l=(r<3?a(l):r>3?a(t,o,l):a(t,o))||l);return r>3&&l&&Object.defineProperty(t,o,l),l},a=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0});var r=o(1),l=o(65),i=o(71),c=function(){function e(e,t){function o(){n.groups=s(e.getMatching(n.levels,n.games),a,r)}var n=this;n.levels=t.get("levels")||[!0,!0,!0],n.games=t.get("games")||{Encounter:!0};var a=["game","level"],r=["name"];n.onSelectGame=function(e){t.set("games",e),n.games=e,o()},n.onSelectLevel=function(e){t.set("levels",e),n.levels=e,o()},e.init.subscribe(o)}return e=n([r.Component({selector:"aliens-reference-app",styles:["#container { display: flex; flex: auto; flex-wrap: wrap; align-content: stretch; }",".mat-h2 { margin: 16px 8px 8px;}"],template:o(416)}),a("design:paramtypes",[l.AlienService,i.LocalStorageService])],e)}();t.AlienReferencePage=c;var s=function(){function e(t,o,n,a){if(o.length<1)return[{value:"",items:t}];var r={},l=o[a];t.forEach(function(e){var t=e[l];r[t]=r[t]||[],r[t].push(e)});var i=Object.keys(r).sort().map(function(e){return{value:e,items:r[e]}});return o[a+1]&&(i=i.map(function(t){return{value:t.value,items:e(t.items,o,n,a+1)}})),i}return function(t,o,n){return e(t,o,n,0)}}()},416:function(e,t){e.exports='<mat-sidenav-container><mat-sidenav #leftnav><cosmic-drawer [page]="\'reference\'"></cosmic-drawer></mat-sidenav><div><mat-toolbar class="mat-primary"><button mat-button (click)="leftnav.toggle()"><mat-icon>menu</mat-icon></button>&nbsp;<h1>Alien Reference</h1></mat-toolbar><div id="container"><game-options [games]="games" (onSelected)="onSelectGame($event)"></game-options><level-options [levels]="levels" (onSelected)="onSelectLevel($event)"></level-options><mat-card><mat-card-title>Sort by</mat-card-title><ol><li>Game</li><li>Level</li><li>Name</li></ol><mat-card-title>Group by</mat-card-title><ol><li>Game</li><li>Level</li></ol></mat-card></div><div *ngFor="let gGroup of groups"><div *ngFor="let lGroup of gGroup.items"><h2 class="mat-h2">Cosmic {{gGroup.value}} - {{lGroup.value| levelName}} {{lGroup.value | levelStars}}</h2><alien-grid [aliens]="lGroup.items"></alien-grid></div></div></div></mat-sidenav-container>'}},[414]);