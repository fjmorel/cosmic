"use strict";!function(){var a=angular.module("cc.base",["ngMaterial"]);a.config(["$mdThemingProvider",function(a){a.theme("default").primaryPalette("deep-purple").accentPalette("amber")}]),a.value("gameInitials",["E","A","C","D","I","S"]),a.filter("gameName",function(){var a={E:"Encounter",A:"Alliance",C:"Conflict",D:"Dominion",I:"Incursion",S:"Storm"};return function(b){return"Cosmic "+a[b]}}),a.component("cosmicDrawer",{template:'\n<md-sidenav md-whiteframe="2" class ="md-sidenav-left" md-component-id="left">\n	<md-toolbar class ="md-tall">\n		<div class ="md-toolbar-tools">\n			<h2>Cosmic Companion</h2>\n		</div>\n	</md-toolbar>\n	<md-content>\n		<md-list>\n			<md-list-item><md-button href="index.html">Home</md-button></md-list-item>\n			<md-subheader class ="md-no-sticky">Tools</md-subheader>\n			<md-list-item><md-button href="generator.html" ng-disabled="$ctrl.page === \'generator\'">Alien Generator</md-button></md-list-item>\n			<md-list-item><md-button href="reference.html" ng-disabled="$ctrl.page === \'reference\'">Alien Reference</md-button></md-list-item>\n			<md-list-item>\n				<a href="https://play.google.com/store/apps/details?id=net.fmorel.cosmicgenerator">\n					<img src="icons/playstore_badge.png" />\n				</a>\n			</md-list-item>\n		</md-list>\n	</md-content>\n</md-sidenav>\n      ',bindings:{page:"<"}}),a.controller("NavDrawer",["$mdSidenav",function(a){this.open=function(){return a("left").open()}}]),a.filter("groupBy",[function(){function a(b,c,d){if(c.length<1)return{value:"",items:b};var e={},f=c[d];b.forEach(function(a){var b=a[f];e[b]=e[b]||[],e[b].push(a)});var g=Object.keys(e).map(function(a){return{value:a,items:e[a]}});return c[d+1]&&(g=g.map(function(b){return{value:b.value,items:a(b.items,c,d+1)}})),g}return function(b,c){return a(b,c,0)}}])}(),function(){var a=angular.module("cc.aliens",["ngMaterial"]);a.config(["$mdThemingProvider",function(a){a.definePalette("alien-green",a.extendPalette("green",{500:"189247",contrastDefaultColor:"light"})),a.definePalette("alien-yellow",a.extendPalette("deep-orange",{500:"c39c07"})),a.definePalette("alien-red",a.extendPalette("red",{500:"c31b09",contrastDefaultColor:"light",contrastDarkColors:["600","700","800","900","A700"],contrastLightColors:["50","100","200","300","400","500","A100","A200","A400"]})),a.theme("alien1").primaryPalette("alien-green").accentPalette("deep-purple"),a.theme("alien2").primaryPalette("alien-yellow").accentPalette("deep-purple"),a.theme("alien3").primaryPalette("alien-red").accentPalette("deep-purple")}]),a.factory("alienData",["$q","$http","levelClassFilter",function(a,b,c){var d={},e=[],f=function(){return e.slice(0)},g=void 0;return{init:function(){return g?g:e.length?a.when(f()):g=b.get("data/aliens.json").then(function(a){return a.data.list.forEach(function(a){d[a.name]=a,e.push(a.name)}),e.sort(),f()})},get:function(a){return angular.copy(d[a]||{})},getMatching:function(a,b,c,e){return this.getMatchingNames(a,b,c,e).map(function(a){return d[a]})},getMatchingNames:function(a,b,c,f){var g=e.filter(function(c){return a[d[c].level]&&b[d[c].game]});return c&&c.length&&(g=g.filter(function(a){return c.indexOf(a)<0})),f&&"none"!==f&&(g=g.filter(function(a){return!d[a].setup||"color"===f&&"color"!==d[a].setup})),g}}}]),a.value("levels",["Green","Yellow","Red"]),a.filter("levelClass",function(){var a=["success","warning","danger"];return function(b){return a[b]}}),a.filter("levelStars",function(){var a=["★","★★","★★★"];return function(b){return a[b]}}),a.filter("levelName",["levels",function(a){return function(b){return a[b]}}]),a.component("alienPanel",{bindings:{alien:"<item"},template:'\n<md-card>\n	<md-card-content class ="alien-head">\n		<md-button class ="md-alien{{::$ctrl.alien.level+1}}-theme md-raised md-primary" ng-click="$ctrl.opened = !$ctrl.opened">{{$ctrl.opened ? \'-\': \'+\'}}</md-button>\n		<h2 class ="md-alien{{::$ctrl.alien.level+1}}-theme md-title alien-fg-{{::$ctrl.alien.level}}">{{::$ctrl.alien.name}}</h2>\n		<p class ="md-subhead clear">{{::$ctrl.alien.power}}</p>\n	</md-card-content>\n	<md-card-footer class ="alien-bar alien-bg-{{::$ctrl.alien.level}}">\n		<span class ="alien-panel-game">C{{::$ctrl.alien.game}}</span>\n		<span class ="alien-panel-level">{{::$ctrl.alien.level | levelStars}}</span>\n		<span ng-if="::($ctrl.alien.setup || $ctrl.alien.restriction)">⚠</span>\n		<span class ="clear"></span>\n	</md-card-footer>\n	<md-card-footer ng-if="$ctrl.opened" class ="alien-desc md-body-1" ng-bind-html="::$ctrl.alien.description">\n	</md-card-footer>\n</md-card>\n      ',controller:["$sce",function(a){"string"==typeof this.alien.description&&(this.alien.description=a.trustAsHtml(this.alien.description))}]}),a.component("alienLevelOptions",{bindings:{options:"=",save:"="},template:"\n<md-card-content>\n  <h4 class =\"md-title\">Levels to include</h4>\n  <md-checkbox ng-change=\"$ctrl.save('complexities')\" ng-model=\"$ctrl.options[level]\" ng-repeat=\"(level, name) in ::['Green','Yellow','Red']\"\n  ng-class =\"::'md-primary md-alien'+(level+1)+'-theme'\">{{::name}}</md-checkbox>\n</md-card-content>\n      "}),a.component("alienGameOptions",{bindings:{options:"=",save:"="},template:"\n<md-card-content>\n  <h4 class =\"md-title\">Games to include</h4>\n  <md-checkbox ng-change=\"$ctrl.save('game')\" ng-model=\"$ctrl.options[game]\" ng-repeat=\"game in ::['E', 'A', 'C', 'D', 'I', 'S']\"\n  class =\"md-primary\">{{::game | gameName}}</md-checkbox>\n</md-card-content>\n      "})}();